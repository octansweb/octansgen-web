<?php

namespace App\OctansGen\Formats;

use App\Models\Automation;
use App\Models\BrandFormat;
use App\Models\FormatField;
use App\OctansGen\Generators\Image;
use App\OctansGen\Generators\Media;
use App\OctansGen\Generators\Quote;
use Illuminate\Support\Facades\Log;


class SingleQuote
{
    protected $mediaGenerator;
    protected $quoteGenerator;
    protected $imageGenerator;

    /**
     * Create a new instance.
     *
     * @return void
     */
    public function __construct(Media $mediaGenerator, Quote $quoteGenerator, Image $imageGenerator)
    {
        $this->mediaGenerator = $mediaGenerator;
        $this->quoteGenerator = $quoteGenerator;
        $this->imageGenerator = $imageGenerator;
    }

    /**
     * Generate a single quote in a specific format.
     *
     * @param string $quote The quote text.
     * @param string $author The author of the quote.
     * @return string The formatted quote.
     */
    public function generate($options = [])
    {
        // $options will contain the following keys:
        // - an image prompt (will contain what type of image should be generated by AI to include in the video)
        // By default it should 
        // - a quote prompt (will contain what type of quote should be generated by AI to include in the video)
        // - a video length (will contain the length of the video in seconds)
        // - a brand_id
        // - a format_id
        // - a user_id

        $brandFormat = BrandFormat::where('brand_id', $options['brand_id'])
            ->where('format_id', $options['format_id'])
            ->first();

        // Write now quote prompt exists in this format field:
        $quotePromptField = FormatField::whereFormatId($options['format_id'])->whereName('Quote Prompt')->first();
        $imagePromptField = FormatField::whereFormatId($options['format_id'])->whereName('Image Prompt')->first();

        // $formatFields = FormatField::whereFormatId($options['format_id'])->get();
        $formatFieldData = json_decode($brandFormat->fields);
        $quotePrompt = $formatFieldData->{$quotePromptField->id};
        $imagePrompt = $formatFieldData->{$imagePromptField->id};

        // dd($quotePrompt, $imagePrompt);

        // First start from an image
        // $bgImage = app_path() . '/OctansGen/Assets/pexels.jpeg';
        $bgImage = $this->imageGenerator->generate($imagePrompt);
        // Crop it to fit a certain size wxh
        $croppedImage = $this->mediaGenerator->scaleAndCropImage($bgImage, storage_path('app/public'));

        $overlayedImage = $this->mediaGenerator->applyBlackOverlayWithOpacity($croppedImage, 0.4, storage_path('app/public'));

        $noisedImage = $this->mediaGenerator->addNoiseToImage($overlayedImage, storage_path('app/public'));

        // Generate the text using the quote generator
        $quote = $this->quoteGenerator->generate($quotePrompt, Automation::find($options['automation_id']) ?? null);

        Log::debug('Generated quote', ['quote' => $quote]);

        if (!$quote) {
            dd('No quote generated', [
                'quote' => $quote
            ]);
        }

        // Create 5 second video from image:
        $video = $this->mediaGenerator->createVideoFromImage($noisedImage, 10, storage_path('app/public'));
        // Add the quote text to the video
        $videoWithImageAndText = $this->mediaGenerator->addTextToVideo($video, $quote, storage_path('app/public'));
        // Add music to the video
        $finalVideo = $this->mediaGenerator->addAudioToVideo($videoWithImageAndText, app_path() . '/OctansGen/Assets/music.mp3', storage_path('app/public'));

        echo "Final video path: $finalVideo\n";

        // Return the final video path
        return $finalVideo;
    }
}
